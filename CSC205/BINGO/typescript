Script started on Sun 18 Sep 2022 08:52:52 PM EDT
]0;reale_nf@cobra:~/BINGO[?1034h[reale_nf@cobra BINGO]$ cat Bingo.Java
cat: Bingo.Java: No such file or directory
]0;reale_nf@cobra:~/BINGO[reale_nf@cobra BINGO]$ cat Bingo.Java\ava[1Pava[1Pavajava
import java.util.*;
public class Bingo{
	private static int numspicked=0;
	private static String nums= "";
	private static String winType;
        public static void main(String[] args){
                Play();
        }
        static void Play(){
                Scanner in = new Scanner(System.in);
                System.out.println("how many players do you want?");
                int numPlayers = in.nextInt();
                int Card[][][] = genBingo(numPlayers);
				System.out.println(printCard(Card));
				int randInt, pwin=-1;
				while (pwin == -1) {
					randInt = randNum();
					Card = checkCard(Card, randInt);
					pwin = checkWin(Card);
				}
				System.out.println("The winner is Player " + (pwin+1) + ". It took " + numspicked +" tries to win");
				System.out.println("It was a " + winType + "Win." );
				System.out.println("The numbers that picked are as follows: ");
				System.out.println(nums);
				System.out.println("The cards look like:");
				System.out.println(printCard(Card));
				in.close();
        }
        static int randNum(){
    		int randInt;
        	while (true) {
        		randInt= (int) (Math.random() * 74+1);
        		BitSet numAllow = new BitSet(74);
        		if(numAllow.get(randInt)== false) {
        			numAllow.set(randInt);
        			numspicked++;
        			if(randInt < 9) {
        				nums+=" ";
        			}
        			nums += " " + Integer.toString(randInt);
        			if((numspicked % 10) == 0) {
        				nums+= "\r\n";
        			}
        			break;
        		}
        	}
        	return randInt;
        }
        static int[][][] genBingo(int numPlayer){
            int choice;    
        	BitSet numAllow = new BitSet(74);
                int output[][][] = new int[numPlayer][5][5];
                for(int z = 0; z < numPlayer; z++){
                        for(int y = 0; y < 5; y++){
                                for (int x = 0;x < 5;x++){
                                        while( true )
                                        {
                                                choice = (int) (Math.random() * 74 + 1);
                                                if(numAllow.get(choice) == false){
                                                        numAllow.set(choice);
                                                        break;
                                                }
                                        }
                                        output[z][y][x]=choice;
                                }
                        }
                        numAllow.clear();
                }
                return output;
        }
        static String printCard(int[][][] bcard){
                String output ="";
                for(int z=0; z< bcard.length;z++){
                        for (int y = 0; y < 5 ; y++){
                                for(int x = 0; x < 5 ;x++){
                                        if (bcard[z][y][x] != -1){
                                        		if (bcard[z][y][x] < 10) {
                                        			output += " ";
                                        		}
                                                output += " " + bcard[z][y][x];
                                        }
                                        else{
                                                output += "  X";
                                        }

                                }
                                output += "\r\n";
                        }
                        output += "card:" + (z+1) + "\r\n";
                }
                return output;
        }
        static int[][][] checkCard(int[][][] bcard,int numPick) {
            for(int z = 0; z < bcard.length ; z++){
            	for(int y = 0; y < 5; y++){
            		for (int x = 0;x < 5;x++){
                       if(numPick == bcard[z][y][x]) {
                    	   bcard[z][y][x]=-1;
                       }
                    }
            	}
            }
            return bcard;
        }
        static int checkWin(int[][][] bcard) {
        	int pWin=-1;
        	int collum,row;
        	int correct=0;
        	for(int z=0; z<bcard.length;z++) {
        		collum= 0;
        		row = 0;
        		correct=0;
            		for(int i=0; i!=5;i++) {
            			if(bcard[z][collum][row]==-1) {
            				correct++;
            			}
            			row++;
            			collum++;
            			if(correct==5) {
            				winType = "Diagonal ";
            				pWin= z;
            			}
            		}
            		row = 4;
            		collum = 0;
            		correct=0;
            		for(int i=0; i!=5;i++) {
            			if(bcard[z][collum][row]==-1) {
            				correct++;
            			}
            			row-=1;
            			collum++;
            			if(correct==5) {
            				winType = "Backwards Diagonal ";
            				pWin= z;
            			}
            		}
            		for (int r = 0; r != 5; r++) {
						collum = 0 ;
						correct = 0 ;
						for (int i = 0; i < 5; i++) {
							if (bcard[z][collum][r]== -1) {
								correct++;
							}
							collum++;
							if (correct == 5) {
								winType= "collum " + Integer.toString((i+1)) + " ";
								pWin=z;
							}
						}
					}
            		for (int r = 0; r != 5; r++) {
						collum = 0 ;
						correct = 0 ;
						for (int i = 0; i < 5; i++) {
							if (bcard[z][r][collum]== -1) {
								correct++;
							}
							collum++;
						if(correct==5) {
							winType= "row " + Integer.toString((i+1)) + " ";
							pWin=z;
						}
						}
					}
            }
        	return pWin;
        }
}]0;reale_nf@cobra:~/BINGO[reale_nf@cobra BINGO]$ cat Bingo.javaJavaexit[Kquitjava Bingo
how many players do you want?
4
 18 19 15 73  3
 47 74  5 34 49
 28 23 70 27 68
 58 41 42 17 35
 65 62 63 24 21
card:1
 38 42 23 49 15
 18 50 10 47 17
  9 48 58  2 14
 70  4 33 54  3
  1 24 28 69 13
card:2
 58 59 48 28 67
 19 30 38 15 23
 74 21 34 61 72
  5 71 64 17 56
 33 43 51 37 62
card:3
 10 39 14 52 24
 35 63 61 41  5
  4 73  3 48 65
 17  2 26 30 51
 70 62 67 31 49
card:4

The winner is Player 2. It took 63 tries to win
It was a collum 5 Win.
The numbers that picked are as follows: 
 59 43 26 9 37 28 72 28 53  1
 40 33 25 36 25 52 20 28 23 22
 40 23 25 27 54 32 37 64 57 21
 58 53 16 34 72 37 44 68 57 36
 35 13  2  6 39  6 30 49 68  8
 74 24 41 26 20 48 30 13 72 55
 52  5 10
The cards look like:
 18 19 15 73  3
 47  X  X  X  X
  X  X 70  X  X
  X  X 42 17  X
 65 62 63  X  X
card:1
 38 42  X  X 15
 18 50  X 47 17
  X  X  X  X 14
 70  4  X  X  3
  X  X  X 69  X
card:2
  X  X  X  X 67
 19  X 38 15  X
  X  X  X 61  X
  X 71  X 17 56
  X  X 51  X 62
card:3
  X  X 14  X  X
  X 63 61  X  X
  4 73  3  X 65
 17  X  X  X 51
 70 62 67 31  X
card:4

]0;reale_nf@cobra:~/BINGO[reale_nf@cobra BINGO]$ java Bingo
how many players do you want?
4
  3 45 44 32 12
  6 42 69 41 36
 17 11 66 73 63
 16 13 15 70 25
 64 19 58 39 60
card:1
 69 74 55 51 67
 32  7 39  9 52
 65 13 10 19 70
 62 36 45 25 61
 66 42 54 17 60
card:2
 68 67 34  9 71
 66 11 44 21 61
 42 32 26 10 38
 60 23 54  5 45
 63 20 59 17 74
card:3
 73 71 24 51 74
 70  1 54 33  6
 46 72 21 27 67
 59 57 58 22 30
 41 62 44 23 31
card:4

The winner is Player 4. It took 56 tries to win
It was a row 5 Win.
The numbers that picked are as follows: 
  6  1 30 46 55 41 70 46 37 15
 46 24 67 26 31  2 52 58 30 63
 20 55 39 25 32 66 26 15 24 50
 17 72 46 20 62 57 63 36 52 22
 54 43  1 31 48 32 48 20 17 44
 10  6 11  7 58 59
The cards look like:
  3 45  X  X 12
  X 42 69  X  X
  X  X  X 73  X
 16 13  X  X  X
 64 19  X  X 60
card:1
 69 74  X 51  X
  X  X  X  9  X
 65 13  X 19  X
  X  X 45  X 61
  X 42  X  X 60
card:2
 68  X 34  9 71
  X  X  X 21 61
 42  X  X  X 38
 60 23  X  5 45
  X  X  X  X 74
card:3
 73 71  X 51 74
  X  X  X 33  X
  X  X 21 27  X
  X  X  X  X  X
  X  X  X 23  X
card:4

]0;reale_nf@cobra:~/BINGO[reale_nf@cobra BINGO]$ exit
exit

Script done on Sun 18 Sep 2022 08:53:33 PM EDT
